[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "supertriplets"
description = "Torch Multimodal Supervised Triplet Learning Toolbox"
readme = "README.md"
classifiers = [
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13"
]
requires-python = ">=3.8"
license = {file = "LICENSE.txt"}
keywords = [
    "data-science",
    "contrastive-learning",
    "triplet-learning",
    "online-triplet-learning",
    "natural-language-processing",
    "computer-vision",
    "artificial-intelligence",
    "machine-learning",
    "deep-learning",
    "transformers",
    "nlp",
    "cv"
]
authors = [
    {name = "Gabriel Tardochi Salles", email = "ga.tardochisalles@gmail.com"}
]
maintainers = [
    {name = "Gabriel Tardochi Salles", email = "ga.tardochisalles@gmail.com"}
]
dynamic = ["version"]
dependencies = [
    "pandas",
    "numpy",
    "Pillow",
    "torch",
    "timm",
    "torchvision",
    "transformers",
    "sentence-transformers",
    "scikit-learn",
    "faiss-gpu"
]

[project.optional-dependencies]
dev = [
    "pre-commit",
    "ruff",
    "black",
    "pytest",
    "pytest-cov"
]

[project.urls]
Homepage = "https://github.com/gabrieltardochi/supertriplets"
Repository = "https://github.com/gabrieltardochi/supertriplets"
Changelog = "https://github.com/gabrieltardochi/supertriplets/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
include = ["supertriplets"]

[tool.setuptools.dynamic]
version = {attr = "supertriplets.__version__"}

[tool.pytest.ini_options]
log_format = "%(asctime)s %(name)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_cli = "True"
testpaths = [
    "tests"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
]

[tool.isort]
profile = "black"

[tool.ruff]
# Ignore line length violations
ignore = ["E501"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
# Ignore imported but unused;
"__init__.py" = ["F401"]

[tool.black]
line-length = 120